<!doctype html>
<html lang="en">

  <head>
    <meta charset="utf-8">

    <title><%= config.title %></title>

    <meta name="description" content="A framework for easily creating beautiful presentations using HTML">
    <meta name="author" content="<%= config.author %>">

    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />

    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

    <link rel="stylesheet" href="css/reveal.min.css">
    <link rel="stylesheet" href="css/theme/<%= config.theme %>.css" id="theme">

    <!-- For syntax highlighting -->
    <link rel="stylesheet" href="lib/css/zenburn.css">

  <% css_files.each do |file| %>
    <link rel="stylesheet" href="<%= file %>">
  <% end %>

    <!-- If the query includes 'print-pdf', use the PDF print sheet -->
    <script>
      document.write( '<link rel="stylesheet" href="css/print/' + ( window.location.search.match( /print-pdf/gi ) ? 'pdf' : 'paper' ) + '.css" type="text/css" media="print">' );
    </script>

    <!--[if lt IE 9]>
    <script src="lib/js/html5shiv.js"></script>
    <![endif]-->
  </head>

  <body>

    <div class="reveal">
      <!-- Any section element inside of this container is displayed as a slide -->
      <div class="slides">
<%= File.open(slides_file).read %>
      </div>

    </div>

    <script src="lib/js/head.min.js"></script>
    <script src="js/reveal.min.js"></script>

    <script>
      (function() {
        function extend( a, b ) {
          for(var i in b) {
            a[i] = b[i];
          }
        }
        var baseOptions = {
          transition: '<%= config.transition %>',
          dependencies: [
            { src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
            { src: 'plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
            { src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
            { src: 'plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
            { src: 'plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
            { src: 'plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }
          ]
        };

        var configOptions = <%= config.revealjs_config.to_json %>

        var initializeOptions = {};
        extend(initializeOptions, baseOptions);
        extend(initializeOptions, configOptions);
        Reveal.initialize(initializeOptions);
      })();
    </script>
  </body>
</html>
